[
["creación-y-personalización-de-tablas-descriptivas.html", "9 Creación y personalización de tablas descriptivas 9.1 Introducción 9.2 Estadísticas descriptivas y tests estadísticos", " 9 Creación y personalización de tablas descriptivas 9.1 Introducción Tal y como hemos visto en este curso, en muchos estudios biomédicos necesitamos llevar a cabo análisis descriptivos y de asociación para muchas variables con la intención de crear (a mano) tablas como esta que se pueden encontrar en los artículos científicos: Baseline comparisons of a case control study Odds ratio summarization of main risk factors Estos análisis se hacen con las mismas instrucciones de R y esto puede ser tedioso. Además copiar y pegar los resultados en una tabla puede llevar a errores. Finalmente, tener que volver a crear la tabla porque los datos han sido depurados o se han eliminado/añadido casos también puede conllevar a una pérdida de tiempo innecesaria. Para evitar estos problemas, podemos usar la librería compareGroups que está accesible en R y que podemos instalar mediante: install.packages(&quot;compareGroups&quot;) Esta librería consiste en tres funciones clave: compareGroups (): genera los cálculos createTable (): crea la tabla descriptiva creada con compareGroups (). Se puede customizar excluyendo categorías de las variables, cambiando el número de decimales, etc. export2... (): exporta las tablas a EXCEL, Word, LaTeX, Rmarkdown, etc. Para ilustrar cómo realizar nuestros análisis usando compareGroups utilizaremos una base de datos del estudio PREDIMED que es un estudio longitudinal que contiene distintas variables iniciales de los participantes, así como eventos ocurridos durante un período de seguimiento de 7 años (variables event y tevent). Cada individuo ha sido asignado a una dieta de tres intervenciones al azar (variable group). Los datos están accesibles con la librería y se pueden cargar tras cargar la libería con: library(compareGroups) ## Warning: package &#39;compareGroups&#39; was built under R version 4.0.3 data(predimed) Las variables son: head(predimed) ## group sex age smoke bmi waist wth htn diab hyperchol ## 1 Control Male 58 Former 33.53 122 0.7530864 No No Yes ## 2 Control Male 77 Current 31.05 119 0.7300614 Yes Yes No ## 4 MedDiet + VOO Female 72 Former 30.86 106 0.6543210 No Yes No ## 5 MedDiet + Nuts Male 71 Former 27.68 118 0.6941177 Yes No Yes ## 6 MedDiet + VOO Female 79 Never 35.94 129 0.8062500 Yes No Yes ## 8 Control Male 63 Former 41.66 143 0.8033708 Yes Yes Yes ## famhist hormo p14 toevent event ## 1 No No 10 5.374401 Yes ## 2 No No 10 6.097194 No ## 4 Yes No 8 5.946612 No ## 5 No No 8 2.907598 Yes ## 6 No No 9 4.761123 No ## 8 No &lt;NA&gt; 9 3.148528 Yes 9.2 Estadísticas descriptivas y tests estadísticos Seleccionamos las varialbes y los métodos Calculamos todos los descriptivos y las pruebas de hipótesis de las variables seleccionadas mediante la función compareGroups (). Las variables se seleccionan haciendo uso del entorno de fórmulas estándar R. Las variables descritas se colocan en al lado derecho de ~ separadas por el signo +, mientras que la variable que indica los grupos se coloca en el lado izquierdo de la fórmula. Para seleccionar todas las variables podemos usar . y para eliminar variables, -. Debemos tener en cuenta que no se permiten transformaciones en el entorno de fórmulas. Si es necesario, deben realizarse antes de llamar a la función compareGroups (). Cada variable es descrita en función del tipo (numérica o categórica). El argumento method fuerza a que los análisis de una variable se haga asumiendo que la variable es: method = 1 normalmente distribuida; method = 2 continua no normal; method = 3 variable categórica; y method = NA, lleva a cabo un test de normalidad y decide si la variable es normal o no (valor por defecto). Así, si quisiéramos describir todas (.) las variables de nuestros datos menos la variable toevent (- toevent) y que el programa decidiera qué variables son normales o no (method = NA) excepto para la variable wtn y p14 que queremos que se reporten con la mediana y los cuartiles en vez de la media y desviación estandard, ejecutaríamos res &lt;- compareGroups(group ~ . - toevent, data = predimed, method = c(wtn = 2, p14 = 2)) ## Warning in compareGroups.fit(X = X, y = y, include.label = include.label, : ## variables wtn specified in &#39;method&#39; not found ## Warning in cor.test.default(x, as.integer(y), method = &quot;spearman&quot;): Cannot ## compute exact p-value with ties res ## ## ## -------- Summary of results by groups of &#39;Intervention group&#39;--------- ## ## ## var N p.value method ## 1 Sex 6324 &lt;0.001** categorical ## 2 Age 6324 0.003** continuous normal ## 3 Smoking 6324 0.444 categorical ## 4 Body mass index 6324 &lt;0.001** continuous normal ## 5 Waist circumference 6324 0.045** continuous normal ## 6 Waist-to-height ratio 6324 &lt;0.001** continuous normal ## 7 Hypertension 6324 0.249 categorical ## 8 Type-2 diabetes 6324 0.017** categorical ## 9 Dyslipidemia 6324 0.423 categorical ## 10 Family history of premature CHD 6324 0.581 categorical ## 11 Hormone-replacement therapy 5661 0.850 categorical ## 12 MeDiet Adherence score 6324 &lt;0.001** continuous non-normal ## 13 AMI, stroke, or CV Death 6324 0.064* categorical ## selection ## 1 ALL ## 2 ALL ## 3 ALL ## 4 ALL ## 5 ALL ## 6 ALL ## 7 ALL ## 8 ALL ## 9 ALL ## 10 ALL ## 11 ALL ## 12 ALL ## 13 ALL ## ----- ## Signif. codes: 0 &#39;**&#39; 0.05 &#39;*&#39; 0.1 &#39; &#39; 1 En esta tabla vemos el número de indiviudos sin valores faltantes (missings) para cada variable, el p-valor correspondiente al test de normalidad y el tipo de variable que considera para el análisis. Si queremos ver las descriptivas de cada variable, basta con usar la función summary (). Veamos esta descriptiva para las dos primeras variables summary(res[1:2]) ## ## --- Descriptives of each row-variable by groups of &#39;Intervention group&#39; --- ## ## ------------------- ## row-variable: Sex ## ## Male Female Male% Female% p.overall p.trend ## [ALL] 2679 3645 42.36243 57.63757 ## Control 812 1230 39.76494 60.23506 8.1e-05 0.388386 ## MedDiet + Nuts 968 1132 46.09524 53.90476 ## MedDiet + VOO 899 1283 41.20073 58.79927 ## p.Control vs MedDiet + Nuts p.Control vs MedDiet + VOO ## [ALL] ## Control 0.000133 0.358324 ## MedDiet + Nuts ## MedDiet + VOO ## p.MedDiet + Nuts vs MedDiet + VOO ## [ALL] ## Control 0.002076 ## MedDiet + Nuts ## MedDiet + VOO ## ## ------------------- ## row-variable: Age ## ## N mean sd lower upper p.overall p.trend ## [ALL] 6324 67.0117 6.17499 66.85948 67.16392 ## Control 2042 67.34231 6.27992 67.06977 67.61485 0.002666 0.101163 ## MedDiet + Nuts 2100 66.6819 6.016395 66.42444 66.93937 ## MedDiet + VOO 2182 67.01971 6.212578 66.75889 67.28052 ## p.Control vs MedDiet + Nuts p.Control vs MedDiet + VOO ## [ALL] ## Control 0.001672 0.20596 ## MedDiet + Nuts ## MedDiet + VOO ## p.MedDiet + Nuts vs MedDiet + VOO ## [ALL] ## Control 0.172672 ## MedDiet + Nuts ## MedDiet + VOO Podemos crear la tabla descriptiva aplicando la función createTable () al objeto que hemos obtenido tras usar la función compareGroups () (res). Usando createTable () podemos personalizar cómo se muestran las variables categóricas (sólo por intervalo o frecuencias absolutas o ambas) mediante el argumento type. El argumento hide.no es útil para ocultar el nivel “no” para las variables binarias. Si solo desea mostrar la categoría “Female”, podemos usar el argumento hide para la variable sex que indicará qué categoría se oculta Este argumento también se aplica a variables categóricas con más de dos categorías. Para especificar el número de dígitos decimales que se mostrarán, utilizamos el argumento digits. En el siguiente ejemplo, la variable p14 no tendrá decimales y la variable hormo solo uno. Finalmente, si desea mostrar cuántas personas tienen valores faltantes (missing) en cada variable usaremos hide.n = TRUE. restab &lt;- createTable(res, digits = c(p14 = 0, hormo=1), type = 1, hide = c(sex = &quot;Male&quot;), hide.no = &quot;no&quot;, show.n = TRUE) restab ## ## --------Summary descriptives table by &#39;Intervention group&#39;--------- ## ## _______________________________________________________________________________________ ## Control MedDiet + Nuts MedDiet + VOO p.overall N ## N=2042 N=2100 N=2182 ## ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ## Sex: Female 60.2% 53.9% 58.8% &lt;0.001 6324 ## Age 67.3 (6.28) 66.7 (6.02) 67.0 (6.21) 0.003 6324 ## Smoking: 0.444 6324 ## Never 62.8% 60.0% 61.9% ## Current 13.2% 14.1% 13.4% ## Former 24.0% 26.0% 24.7% ## Body mass index 30.3 (3.96) 29.7 (3.77) 29.9 (3.71) &lt;0.001 6324 ## Waist circumference 101 (10.8) 100 (10.6) 100 (10.4) 0.045 6324 ## Waist-to-height ratio 0.63 (0.07) 0.62 (0.06) 0.63 (0.06) &lt;0.001 6324 ## Hypertension 83.8% 82.8% 81.9% 0.249 6324 ## Type-2 diabetes 47.5% 45.2% 49.6% 0.017 6324 ## Dyslipidemia 72.4% 73.3% 71.5% 0.423 6324 ## Family history of premature CHD 22.6% 21.9% 23.2% 0.581 6324 ## Hormone-replacement therapy 1.7% 1.6% 1.8% 0.850 5661 ## MeDiet Adherence score 8 [7;10] 9 [8;10] 9 [8;10] &lt;0.001 6324 ## AMI, stroke, or CV Death 4.75% 3.33% 3.90% 0.064 6324 ## ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ "]
]
