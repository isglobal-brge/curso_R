[
["index.html", "Curso de R 1 Introducción", " Curso de R Juan R González 2020-09-28 1 Introducción Este bookdown sirven como notas para el curso Análisis descriptivo y estadística básica en estudios biomédicos con R y Rmarkdown impartido en el Insituto Aragonés de Ciencias de la Salud Este material está licenciado bajo una Creative Commons Attribution 4.0 International License. "],
["importar-datos-a-r.html", "2 Importar datos a R 2.1 Directorio de trabajo 2.2 Importar datos de texto", " 2 Importar datos a R Rstudio posee una pestaña en el Entorno (panel derecho-arriba, recordad la primera lección) y un botón que nos permite importar datasets de distintos formatos (ver figura). Esta es una forma sencilla de importar datos, pero siempre es recomendable importar archivos usando código (scripts) que nos permite compartir flujos de trabajo y análisis entre investigadores. En ese botón vemos que podemos importar datos de distintos tipos Importar archivos Fijémosnos que los dos primeros menus hablan de importar ficheros de texto. También podemos importar ficheros de Excel, y de otros softwares como SPSS, SAS o Stata. Los ejemplos para este curso (y en general se suele hacer así) utilizará datos en formato texto. En este formato disponemos de las variables en columnas y los individuos o unidades de análisis en filas. NOTA: Si se dispone de datos en formato Excel o SPSS se pueden exportar de forma sencilla a texto. Este formato es muy útil ya que estamos acostumbrados a visualizar datos en formato tabular; es decir, como una tabla. Podemos pensar que dependiendo de como se separen las observaciones tenemos distintos tipos de datos tabulares, pero en realidad su estructura es similar: variables en columnas y las observaciones de un individuo separadas por una marca o carácter. Este carácter puede ser un espacio, un tabulador, una coma, punto y coma etc… El formato tabular mas extendido es el CSV, donde las observaciones están separadas por comas, pero en este curso usaremos datos en formato texto separados por tabuladores que también es un formato muy extendido (TSV). 2.1 Directorio de trabajo Para las clases y los ejercicios usaremos varios conjuntos de datos que disponemos en varios ficheros que pueden bajarse de la carpeta XXX del Moodle de la asignatura. Se recomienda crear un proyecto y crear una carpeta “datos” donde poner estos datasets que vamos a usar de ejemplo (ver video). Si no queréis trabajar con proyectos, recordemos que tneéis que cambiar el directorio de trabajo allí donde hayáis bajado los datos de Moodle. Recordad que esto lo podéis hacer con el menu de Rstudio Archivo de trabajo O bien (recomendado) podéis hacerlo escribiendo una instrucción en el script. Como yo tengo la carpeta “datos” en el directorio C:/Juan/cursos/R_Zaragoza/material_curso_online) escribiría: setwd(&quot;C:/Juan/cursos/R_Zaragoza/material_curso_online&quot;) 2.2 Importar datos de texto Una vez tenemos el directorio de trabajo establecido ilustraremos como importar, por ejemplo, el fichero de datos “multicentric.txt” que recoge información sobre un estudio multicéntrico de casos y controles para estudiar factores pronóstico del cáncer de cervix. Estos serían los pasos que tendríamos que llevar a cabo Indicamos que queremos importar unos datos En el navegador que se abre buscamos la carpeta “datos” y seleccionamos el archivo “multicentric.txt” [NOTA: si no hemos hecho bien el proyecto o cambiado el directorio de trabajo, podemos navegar hasta buscar la carpeta donde hayamos bajado los datos]. A continuación nos aparecerá este cuadro Abajo a la derecha se puede ver cómo nos quedarán nuestros datos cuando se importen. Fijémonos que el nombre de las variables que estaban en la primera fila, no se han importado correctamente y que R ha puesto como nombre de las variables V1, V2, V3, …. Esto ocurre porque por defecto (parte izquierda) la opción “heading” es “No”. Debemos cambiarlo a “Yes” cuando tengamos datos con los nombres de las variables en la primera fila (esto es lo habitual). Si los datos de texto estuvieran separados por otra cosa que no fuesen tabuladores, no veríamos columnas. En ese caso debems cambiar el delimitador usando la opción “Separator”. Cuando hacemos click sobre el botón “Import” los datos se cargan como un objeto de R que se llama “multicentric”. Este nombre se puede cambiar en la caja “Name” que hay arriba a la izquierda. A parte de que se carge el dataset como un objeto de R, también se abren los datos como si fuese SPSS: Ahora, una vez hemos cargado nuestros datos, podemos abrir un script de R y empezar a hacer análisis con ellos. Ahora podéis abrir un script nuevo y empezar a escribir y ejecutar las instrucciones que se detallan a continuación. Recordemos que se puede hacer mediante el menu File &gt; New File &gt; R Script. Un script, podría quedar entonces de la siguiente manera tras pedir que R importe los datos multicentric.txt Lo primero que vemos es que tras el simbolo # el texto está en verde. Eso indica que esa parte no es código de R y no se ejecutará. Esto es recomendable para ir indicando qué hacen los siguientes comandos (compartir código entre investigadores). Las instrucciones que vemos en el script y que se repiten abajo, también sirven para importar datos utilizando comandos de R y no el menú como hemos visto anteriormente. Primero cambio el directorio de trabajo (si no estoy donde tengo la carpeta de datos es necesario) # Cambio el directorio de trabajo setwd(&quot;C:/Juan/cursos/R_Zaragoza/material_curso_online&quot;) y luego cargo los datos # Importo los datos multicentric &lt;- read.delim(&quot;datos/multicentric.txt&quot;) "],
["manejo-de-datos.html", "3 Manejo de datos 3.1 Visualización de datos 3.2 Creación de variables 3.3 Recodificación de variables 3.4 Filtrado de datos", " 3 Manejo de datos Una vez importados los datos, ya podemos empezar con nuestros análisis estadísticos. Pero antes, mostraremos cómo crear nuevas variables ya que a menudo, antes de empezar con los análisis necesitamos crear o recodificar nuevas variables que contengan la información que queremos tratar. Seguiremos usando los datos guardados en el fichero multicentric.txt que están cargados en un objeto llamado multicentric. La idea es que en el script que habéis abierto, podéis ir escribiendo estos comandos de R y ver por la consola qué resultados obtenéis. Recordad que cuando escribáis la instrucción, la podéis ejecutar con el boton “Run” que tenéis arriba a la derecha en la ventana del scipt o bien situando el cursor en la linea de comando y clickando “Crtl + R”. En este material, el primer recuadro en gris corresponde al comando que tenéis que escribir en el script (ventana superior-izquierda de RStudio) y el siguiente recuadro en gris muestra lo que veríais por la línea de comandos (ventana inferior-izquierda de R studio) 3.1 Visualización de datos Empezemos viendo qué datos tenemos. Para ello usaremos la función head() head(multicentric) ident pais status edad niveledu fumar edad1sex regcompa totcompa ets co edinico 1 10001 Brasil Control 64 primaria ex-fumador 16 2 2-3 si no NA 2 10002 Brasil Caso 51 primaria fumador 17 1 1 si no NA 3 10003 Brasil Control 48 ninguno fumador 14 2 2-3 no no NA 4 10004 Brasil Caso 49 ninguno no fumador 23 1 1 no no NA 5 10005 Brasil Control 41 primaria no fumador 23 1 1 no no NA 6 10006 Brasil Caso 45 primaria fumador 18 1 1 no si 22 edfinco durco condon embara edademba nembara pap edad1pap vph 1 NA NA no si 16 9 si 40 negativo 2 NA NA no si 17 13 si 45 positivo 3 NA NA no si 14 11 no NA positivo 4 NA NA no si 23 13 no NA positivo 5 NA NA no si 24 3 si 30 negativo 6 38 14 no si 18 5 si 33 positivo Para saber cuántos individuos y cuántas variables tenemos en nuestra base de datos podemos usar la función dim(). nrow() nos daría el número de individuos y ncol() el número de variables dim(multicentric) [1] 2910 21 nrow(multicentric) [1] 2910 ncol(multicentric) [1] 21 También podemos ver qué tipo de variables tenemos y cuáles son sus categorías str(multicentric) &#39;data.frame&#39;: 2910 obs. of 21 variables: $ ident : int 10001 10002 10003 10004 10005 10006 10007 10008 10009 10010 ... $ pais : chr &quot;Brasil&quot; &quot;Brasil&quot; &quot;Brasil&quot; &quot;Brasil&quot; ... $ status : chr &quot;Control&quot; &quot;Caso&quot; &quot;Control&quot; &quot;Caso&quot; ... $ edad : int 64 51 48 49 41 45 51 42 58 76 ... $ niveledu: chr &quot;primaria&quot; &quot;primaria&quot; &quot;ninguno&quot; &quot;ninguno&quot; ... $ fumar : chr &quot;ex-fumador&quot; &quot;fumador&quot; &quot;fumador&quot; &quot;no fumador&quot; ... $ edad1sex: int 16 17 14 23 23 18 29 19 22 27 ... $ regcompa: int 2 1 2 1 1 1 1 2 1 1 ... $ totcompa: chr &quot;2-3&quot; &quot;1&quot; &quot;2-3&quot; &quot;1&quot; ... $ ets : chr &quot;si&quot; &quot;si&quot; &quot;no&quot; &quot;no&quot; ... $ co : chr &quot;no&quot; &quot;no&quot; &quot;no&quot; &quot;no&quot; ... $ edinico : int NA NA NA NA NA 22 30 32 NA NA ... $ edfinco : int NA NA NA NA NA 38 38 32 NA NA ... $ durco : int NA NA NA NA NA 14 8 1 NA NA ... $ condon : chr &quot;no&quot; &quot;no&quot; &quot;no&quot; &quot;no&quot; ... $ embara : chr &quot;si&quot; &quot;si&quot; &quot;si&quot; &quot;si&quot; ... $ edademba: int 16 17 14 23 24 18 29 20 22 30 ... $ nembara : int 9 13 11 13 3 5 1 7 8 2 ... $ pap : chr &quot;si&quot; &quot;si&quot; &quot;no&quot; &quot;no&quot; ... $ edad1pap: int 40 45 NA NA 30 33 45 NA 42 38 ... $ vph : chr &quot;negativo&quot; &quot;positivo&quot; &quot;positivo&quot; &quot;positivo&quot; ... Finalmente, si queremos saber el nombre de las variables que tenemos en nuestra base de datos usaríamos: colnames(multicentric) [1] &quot;ident&quot; &quot;pais&quot; &quot;status&quot; &quot;edad&quot; &quot;niveledu&quot; &quot;fumar&quot; &quot;edad1sex&quot; &quot;regcompa&quot; [9] &quot;totcompa&quot; &quot;ets&quot; &quot;co&quot; &quot;edinico&quot; &quot;edfinco&quot; &quot;durco&quot; &quot;condon&quot; &quot;embara&quot; [17] &quot;edademba&quot; &quot;nembara&quot; &quot;pap&quot; &quot;edad1pap&quot; &quot;vph&quot; Antes de explicar cómo crear nuevas variables, veamos algunos aspectos básicos de R en cuanto al acceso de las variables. Supongamos que queremos calcular cualquier estadístico descriptivo de alguna de las variables o ver un resumen de ella. Para esta tarea podemos utilizar distintas funciones de R que normalmente se ejecutan como funcion(). Dentro del paréntesis debemos indicarle cuál es la variable que queremos analizar. Para ello, utilizaremos el símbolo $ [también podría usarse [[ ]] pero intentaremos evitar escribir demasiado código]. Así, por ejemplo, si queremos calcular la media de la primera relación sexual (variable edad1sex) bastaría con ejecutar mean(multicentric$edad1sex, na.rm=TRUE) [1] 19.72932 NOTA: na.rm=TRUE debe escribirse porque si no, R devuelve NA cuando hay missings en una variable. Con esta opción se analizan casos completos. También es interesante conocer estas otras funciones. Descriptiva de una variable categórica. Ejemplo: cuantas mujeres hay de cada país table(multicentric$pais) Brasil Colombia Espaia Filipinas Marruecos Peri Tailandia 347 323 376 636 332 312 584 Descriptiva de una variable continua. Ejemplo: edad de las participantes summary(multicentric$edad) Min. 1st Qu. Median Mean 3rd Qu. Max. 20.00 40.00 49.00 48.86 58.00 84.00 Uno de los aspectos que más cuestan al principio de usar R es familiarizarse con la escritura de código. Rstudio nos ayuda puesto que podemos autocompletar el nombre de una base de datos o de una función. Por ejemplo, basta con empezar a escribir “multi” y dar al tabulador para que en el script se autocomplete la palabra “multicentric”. Una vez escrito el nombre de la base de datos, si escribimos el símbolo $ obtenemos un desplegable que nos muestra todas las variables que hay en ese objeto y basta con seleccionar la variable que queremos resumir para que R la ponga directamente en el script tal y como muestra la siguiente figura. También podemos acceder a una variablae usando [ e indicando el número de columna donde está la variable que queremos resumir o su nombre. En este caso como edad1sex está en la columna 7 escribiríamos mean(multicentric[ , 7], na.rm=TRUE) [1] 19.72932 o usando su nombre mean(multicentric[ , &quot;edad1sex&quot;], na.rm=TRUE) [1] 19.72932 pero como se ha indicado anteriormente, lo más sencillo es usar $ ya que ayuda a evitar errores en la escritura que es uno de los principales problemas para principiantes. 3.2 Creación de variables Para crear una nueva variable, por ejemplo la edad de la primera relación sexual menos 18, tendríamos que escribir multicentric$edad1sex2 &lt;- multicentric$edad1sex - 18 Donde a la izquierda de &lt;- se pone el nombre de la nueva variable que queremos añadir a multicentric (por eso se pone el $) y a la derecha la operación que queremos hacer. NOTA: el símbolo &lt;- es como un = pero este último se usa para los argumentos de una función (lo veremos más adelante). Esta forma de escribir es muy larga y complicada, sobre todo para los nuevos usuarios de R, y puede introducir errores fácilmente. Es por ello que podemos trabajar con una serie de librerías que facilitan llevar a cabo estas operaciones. Estas liberías forman parte de los desarrolladores de RStudio y son un compendio de funciones para el análisis científico de datos (Data Science). Si queremos usar estas funciones, debemos instalar las librerías de tydiverse [https://www.tidyverse.org/] ejecutando: install.packages(tidiverse) Después debemos cargar estas librerías con library(tidyverse) Ahora, para crear una nueva variable basta con usar la función mutate() que tiene el primer argumento el nombre de nuestra base datos y luego la fórmula que queremos aplicar para calcular la nueva variable. Nos fijamos que ya no es necesario el uso de $ y la instrucción se lee de forma más intuitiva. multicentric &lt;- mutate(multicentric, edad1sex2 = edad1sex - 18) Si ahora damos un vistazo a las variables que hay en multicentric veremos que al final se ha añadido una nueva variable (edad1sex2) que es la que hemos creado str(multicentric) &#39;data.frame&#39;: 2910 obs. of 22 variables: $ ident : int 10001 10002 10003 10004 10005 10006 10007 10008 10009 10010 ... $ pais : chr &quot;Brasil&quot; &quot;Brasil&quot; &quot;Brasil&quot; &quot;Brasil&quot; ... $ status : chr &quot;Control&quot; &quot;Caso&quot; &quot;Control&quot; &quot;Caso&quot; ... $ edad : int 64 51 48 49 41 45 51 42 58 76 ... $ niveledu : chr &quot;primaria&quot; &quot;primaria&quot; &quot;ninguno&quot; &quot;ninguno&quot; ... $ fumar : chr &quot;ex-fumador&quot; &quot;fumador&quot; &quot;fumador&quot; &quot;no fumador&quot; ... $ edad1sex : int 16 17 14 23 23 18 29 19 22 27 ... $ regcompa : int 2 1 2 1 1 1 1 2 1 1 ... $ totcompa : chr &quot;2-3&quot; &quot;1&quot; &quot;2-3&quot; &quot;1&quot; ... $ ets : chr &quot;si&quot; &quot;si&quot; &quot;no&quot; &quot;no&quot; ... $ co : chr &quot;no&quot; &quot;no&quot; &quot;no&quot; &quot;no&quot; ... $ edinico : int NA NA NA NA NA 22 30 32 NA NA ... $ edfinco : int NA NA NA NA NA 38 38 32 NA NA ... $ durco : int NA NA NA NA NA 14 8 1 NA NA ... $ condon : chr &quot;no&quot; &quot;no&quot; &quot;no&quot; &quot;no&quot; ... $ embara : chr &quot;si&quot; &quot;si&quot; &quot;si&quot; &quot;si&quot; ... $ edademba : int 16 17 14 23 24 18 29 20 22 30 ... $ nembara : int 9 13 11 13 3 5 1 7 8 2 ... $ pap : chr &quot;si&quot; &quot;si&quot; &quot;no&quot; &quot;no&quot; ... $ edad1pap : int 40 45 NA NA 30 33 45 NA 42 38 ... $ vph : chr &quot;negativo&quot; &quot;positivo&quot; &quot;positivo&quot; &quot;positivo&quot; ... $ edad1sex2: num -2 -1 -4 5 5 0 11 1 4 9 ... 3.3 Recodificación de variables En biomedicina a veces interesa recodificar nuevas variables según varios criterios. Veamos algunos ejemplos Recodificar una variable continua en una categórica que toma valores superiores o inferiores a un valor. Ejemplo: edad de primera relación sexual antes o despues de 18 años multicentric &lt;- mutate(multicentric, edad1sex3 = ifelse(edad1sex &lt;=18, 0 , 1)) table(multicentric$edad1sex3) 0 1 1379 1510 Recodificar una variable continua en cuartiles. Ejemplo: edad de primera relación sexual en cuartiles multicentric &lt;- mutate(multicentric, edad1sex4 = cut(edad1sex, quantile(edad1sex, na.rm=TRUE))) table(multicentric$edad1sex4) (5,16] (16,19] (19,22] (22,52] 736 872 596 684 Recodificar una variable según unos puntos de corte y ponerles una etiqueta. Ejemplo: edad de primera relación sexual antes de los 14, entre los 15 y 18 (ambos incluidos) y más de los 18 (19 o más) multicentric &lt;- mutate(multicentric, edad1sex5 = cut(edad1sex, c(-Inf, 14, 18, Inf), labels=c(&quot;&lt;14&quot;, &quot;15-18&quot;, &quot;19+&quot;))) table(multicentric$edad1sex5) &lt;14 15-18 19+ 257 1122 1510 3.4 Filtrado de datos También podemos filtrar una base de datos para hacer unos análisis específicos en un subgrupo de individuos. Supongamos que queremos describir nuestros controles. Para ello utilizaremos la función filter(). Sabemos que el estado Caso/Control se encuentra en la variable status por eso escribimos controles &lt;- filter(multicentric, status==&quot;Control&quot;) dim(controles) [1] 1421 25 Usamos == para poner una condición de igualdad. Para otras condiciones deberemos usar Por ejemplo, si queremos seleccionar a los casos que hayan tenido una infección por VPH (variable vph) deberíamos escribir casos.vph &lt;- filter(multicentric, status==&quot;Caso&quot; &amp; vph==&quot;positivo&quot;) dim(casos.vph) [1] 1190 25 "],
["estadística-descriptiva.html", "4 Estadística descriptiva 4.1 Variables categóricas 4.2 Tabla de contingencia 4.3 Variables continuas", " 4 Estadística descriptiva Ahora empezaremos a ver la potencia de R. No sólo se hacen librerías para el análisis estadístico de datos, también se hacen librerías para visualizar resultados de forma gráfica, hacer análisis descriptivos rápidos o crear tablas de artículos de forma sencilla. Algunas de estas librerías las iremos viendo durante el curso. Empecemos con algunas librerías para resumir de forma rápida nuestras variables. Para ello necesitamos instalar las siguientes librerías que iremos viendo a lo largo del curso install.packages(&quot;summarytools&quot;, &quot;compareGroups&quot;) 4.1 Variables categóricas La librería summarytools es muy potente. Por ejemplo, podemos obtener un resumen para las variables categóricas (por ejemplo para saber cuantos casos y controles tenemos) con la función freq() library(summarytools) freq(multicentric$status) Frequencies multicentric$status Type: Character Freq % Valid % Valid Cum. % Total % Total Cum. ------------- ------ --------- -------------- --------- -------------- Caso 1489 51.17 51.17 51.17 51.17 Control 1421 48.83 100.00 48.83 100.00 &lt;NA&gt; 0 0.00 100.00 Total 2910 100.00 100.00 100.00 100.00 Notemos que antes hay que cargar la librería para que R encuentre la función freq(), no es suficiente con instalar la librería, luego hay que cargarla. También vemos que esta función no describe las variables categóricas (ver warning). Podemos evitar que salgan los missings (NA) y hacer más compacta la tabla con la instrucción freq(multicentric$status, report.nas = FALSE, headings = FALSE) Freq % % Cum. ------------- ------ -------- -------- Caso 1489 51.17 51.17 Control 1421 48.83 100.00 Total 2910 100.00 100.00 Si queremos que lo haga para todas las variables categóricas, funciona así de simple freq(multicentric, report.nas = FALSE, headings = FALSE) multicentric$pais Freq % % Cum. --------------- ------ -------- -------- Brasil 347 11.92 11.92 Colombia 323 11.10 23.02 Espaia 376 12.92 35.95 Filipinas 636 21.86 57.80 Marruecos 332 11.41 69.21 Peri 312 10.72 79.93 Tailandia 584 20.07 100.00 Total 2910 100.00 100.00 multicentric$status Freq % % Cum. ------------- ------ -------- -------- Caso 1489 51.17 51.17 Control 1421 48.83 100.00 Total 2910 100.00 100.00 multicentric$niveledu Freq % % Cum. ------------------- ------ -------- -------- ninguno 681 23.40 23.40 primaria 1446 49.69 73.09 secundaria 673 23.13 96.22 ticnico 62 2.13 98.35 universitario 48 1.65 100.00 Total 2910 100.00 100.00 multicentric$fumar Freq % % Cum. ---------------- ------ -------- -------- ex-fumador 223 7.66 7.66 fumador 292 10.03 17.70 no fumador 2395 82.30 100.00 Total 2910 100.00 100.00 multicentric$regcompa Freq % % Cum. ----------- ------ -------- -------- 1 2147 74.39 74.39 2 553 19.16 93.56 3 142 4.92 98.48 4 32 1.11 99.58 5 8 0.28 99.86 6 4 0.14 100.00 Total 2886 100.00 100.00 multicentric$totcompa Freq % % Cum. ----------- ------ -------- -------- &gt;=100 7 0.25 0.25 1 1947 68.51 68.75 11-20 9 0.32 69.07 2-3 749 26.35 95.43 21-50 7 0.25 95.67 4-10 122 4.29 99.96 51-99 1 0.04 100.00 Total 2842 100.00 100.00 multicentric$ets Freq % % Cum. ----------- ------ -------- -------- no 1763 64.65 64.65 si 964 35.35 100.00 Total 2727 100.00 100.00 multicentric$co Freq % % Cum. ----------- ------ -------- -------- no 1977 67.94 67.94 si 933 32.06 100.00 Total 2910 100.00 100.00 multicentric$condon Freq % % Cum. ----------- ------ -------- -------- no 2540 87.29 87.29 si 370 12.71 100.00 Total 2910 100.00 100.00 multicentric$embara Freq % % Cum. ----------- ------ -------- -------- no 109 3.75 3.75 si 2801 96.25 100.00 Total 2910 100.00 100.00 multicentric$nembara Freq % % Cum. ----------- ------ -------- -------- 1 155 5.55 5.55 2 322 11.52 17.07 3 383 13.70 30.77 4 373 13.35 44.11 5 338 12.09 56.21 6 299 10.70 66.91 7 257 9.19 76.10 8 195 6.98 83.08 9 138 4.94 88.01 10 105 3.76 91.77 11 71 2.54 94.31 12 63 2.25 96.57 13 32 1.14 97.71 14 23 0.82 98.53 15 21 0.75 99.28 16 8 0.29 99.57 17 6 0.21 99.79 18 3 0.11 99.89 20 1 0.04 99.93 22 1 0.04 99.96 25 1 0.04 100.00 Total 2795 100.00 100.00 multicentric$pap Freq % % Cum. ----------- ------ -------- -------- no 1291 45.05 45.05 si 1575 54.95 100.00 Total 2866 100.00 100.00 multicentric$vph Freq % % Cum. -------------- ------ -------- -------- negativo 1077 44.23 44.23 positivo 1358 55.77 100.00 Total 2435 100.00 100.00 multicentric$edad1sex3 Freq % % Cum. ----------- ------ -------- -------- 0 1379 47.73 47.73 1 1510 52.27 100.00 Total 2889 100.00 100.00 multicentric$edad1sex4 Freq % % Cum. ------------- ------ -------- -------- (5,16] 736 25.48 25.48 (16,19] 872 30.19 55.68 (19,22] 596 20.64 76.32 (22,52] 684 23.68 100.00 Total 2888 100.00 100.00 multicentric$edad1sex5 Freq % % Cum. ----------- ------ -------- -------- &lt;14 257 8.90 8.90 15-18 1122 38.84 47.73 19+ 1510 52.27 100.00 Total 2889 100.00 100.00 4.2 Tabla de contingencia Para crear una tabla de contingencia y ver cómo se distribuyen los casos y controles según su infección por vph podríamos usar la función ctable() ctable(multicentric$status, multicentric$vph, prop=&quot;r&quot;) Cross-Tabulation, Row Proportions status * vph Data Frame: multicentric --------- ----- -------------- -------------- ------------- --------------- vph negativo positivo &lt;NA&gt; Total status Caso 81 ( 5.4%) 1190 (79.9%) 218 (14.6%) 1489 (100.0%) Control 996 (70.1%) 168 (11.8%) 257 (18.1%) 1421 (100.0%) Total 1077 (37.0%) 1358 (46.7%) 475 (16.3%) 2910 (100.0%) --------- ----- -------------- -------------- ------------- --------------- el argumento prop nos sirve para indicar si queremos las proporciones por fila (‘r’) o columna (‘c’). Podmeos eliminar la columna de missings indicando que el argumento useNA sea “no” ctable(multicentric$status, multicentric$vph, useNA=&quot;no&quot;, prop=&quot;r&quot;) Cross-Tabulation, Row Proportions status * vph Data Frame: multicentric --------- ----- -------------- -------------- --------------- vph negativo positivo Total status Caso 81 ( 6.4%) 1190 (93.6%) 1271 (100.0%) Control 996 (85.6%) 168 (14.4%) 1164 (100.0%) Total 1077 (44.2%) 1358 (55.8%) 2435 (100.0%) --------- ----- -------------- -------------- --------------- 4.3 Variables continuas Para las variables continuas podemos usar la función descr(). Por ejemplo, si queremos ver los principales estadísticos de la variable edad de la primera relación sexual (variable edad1sex) escribiríamos descr(multicentric$edad1sex) Descriptive Statistics multicentric$edad1sex N: 2910 edad1sex ----------------- ---------- Mean 19.73 Std.Dev 4.73 Min 5.00 Q1 16.00 Median 19.00 Q3 22.00 Max 52.00 MAD 4.45 IQR 6.00 CV 0.24 Skewness 1.10 SE.Skewness 0.05 Kurtosis 2.44 N.Valid 2889.00 Pct.Valid 99.28 Una de las principales ventajas de R es que usa un lenguaje de programación orientado a objetos. En palabras sencillas, esto implica que una misma función se puede aplicar a distintos tipos de objetos y la función ya sabe qué hacer. En este caso, si aplicamos la función desrc() a toda nuestra base de datos, lo que hace es buscar todas las variables continuas, y resumirlas. descr(multicentric) Descriptive Statistics multicentric N: 2910 durco edad edad1pap edad1sex edad1sex2 edad1sex3 edademba ----------------- -------- --------- ---------- ---------- ----------- ----------- ---------- Mean 6.40 48.86 39.91 19.73 1.73 0.52 21.32 Std.Dev 6.16 11.92 13.66 4.73 4.73 0.50 4.80 Min 1.00 20.00 14.00 5.00 -13.00 0.00 10.00 Q1 1.00 40.00 29.00 16.00 -2.00 0.00 18.00 Median 4.00 49.00 38.00 19.00 1.00 1.00 20.00 Q3 9.00 58.00 50.00 22.00 4.00 1.00 24.00 Max 34.00 84.00 80.00 52.00 34.00 1.00 52.00 MAD 4.45 13.34 14.83 4.45 4.45 0.00 4.45 IQR 8.00 18.00 21.00 6.00 6.00 1.00 6.00 CV 0.96 0.24 0.34 0.24 2.74 0.96 0.23 Skewness 1.53 0.12 0.46 1.10 1.10 -0.09 1.02 SE.Skewness 0.08 0.05 0.06 0.05 0.05 0.05 0.05 Kurtosis 2.43 -0.66 -0.58 2.44 2.44 -1.99 1.50 N.Valid 923.00 2910.00 1519.00 2889.00 2889.00 2889.00 2795.00 Pct.Valid 31.72 100.00 52.20 99.28 99.28 99.28 96.05 Table: Table continues below edfinco edinico ident nembara regcompa ----------------- --------- --------- ---------- --------- ---------- Mean 33.72 26.75 11550.22 5.55 1.34 Std.Dev 7.76 6.64 993.30 3.24 0.67 Min 15.00 11.00 10001.00 1.00 1.00 Q1 28.00 22.00 10728.00 3.00 1.00 Median 33.00 26.00 11455.50 5.00 1.00 Q3 39.00 31.00 12183.00 7.00 2.00 Max 62.00 48.00 13701.00 25.00 6.00 MAD 7.41 7.41 1078.59 2.97 0.00 IQR 11.00 9.00 1454.50 4.00 1.00 CV 0.23 0.25 0.09 0.58 0.50 Skewness 0.32 0.50 0.42 0.99 2.42 SE.Skewness 0.08 0.08 0.05 0.05 0.05 Kurtosis -0.16 -0.16 -0.72 1.21 7.44 N.Valid 923.00 931.00 2910.00 2795.00 2886.00 Pct.Valid 31.72 31.99 100.00 96.05 99.18 Si queremos tener esta descriptiva según una segunda variable categórica como es habitual en la mayoría de análisis estadísticos (por ejemplo entre grupos de comparación o para casos y controles) podemos hacerlo también. Supongamos que queremos tener una descriptiva de las variables categóricas según la variable caso-control (status). Para ello, deberíamos usar la función stby() e indicar en el argumento INDICES nuestra variable por la que queremos separar los análisis. stby(multicentric, INDICES = multicentric$status, FUN = descr, stats = &quot;common&quot;, transpose = TRUE) Descriptive Statistics multicentric Group: status = Caso N: 1489 Mean Std.Dev Min Median Max N.Valid Pct.Valid --------------- ---------- --------- ---------- ---------- ---------- --------- ----------- durco 7.14 6.25 1.00 5.00 31.00 490.00 32.91 edad 49.53 11.85 20.00 49.00 84.00 1489.00 100.00 edad1pap 42.95 14.56 14.00 42.00 80.00 825.00 55.41 edad1sex 18.72 4.34 6.00 18.00 52.00 1486.00 99.80 edad1sex2 0.72 4.34 -12.00 0.00 34.00 1486.00 99.80 edad1sex3 0.42 0.49 0.00 0.00 1.00 1486.00 99.80 edademba 20.36 4.41 10.00 20.00 52.00 1453.00 97.58 edfinco 33.99 7.78 16.00 34.00 58.00 490.00 32.91 edinico 26.12 6.66 13.00 25.00 48.00 492.00 33.04 ident 11581.04 966.97 10002.00 11505.00 13581.00 1489.00 100.00 nembara 5.95 3.26 1.00 5.00 25.00 1453.00 97.58 regcompa 1.45 0.75 1.00 1.00 6.00 1484.00 99.66 Group: status = Control N: 1421 Mean Std.Dev Min Median Max N.Valid Pct.Valid --------------- ---------- --------- ---------- ---------- ---------- --------- ----------- durco 5.57 5.96 1.00 3.00 34.00 433.00 30.47 edad 48.16 11.97 20.00 48.00 82.00 1421.00 100.00 edad1pap 36.29 11.52 16.00 35.00 75.00 694.00 48.84 edad1sex 20.80 4.89 5.00 20.00 46.00 1403.00 98.73 edad1sex2 2.80 4.89 -13.00 2.00 28.00 1403.00 98.73 edad1sex3 0.63 0.48 0.00 1.00 1.00 1403.00 98.73 edademba 22.36 4.99 13.00 22.00 41.00 1342.00 94.44 edfinco 33.41 7.74 15.00 33.00 62.00 433.00 30.47 edinico 27.46 6.56 11.00 27.00 47.00 439.00 30.89 ident 11517.93 1019.50 10001.00 11404.00 13701.00 1421.00 100.00 nembara 5.12 3.15 1.00 4.00 20.00 1342.00 94.44 regcompa 1.23 0.55 1.00 1.00 5.00 1402.00 98.66 El argumento stats=\"common\" lo ponemos para que saque menos estadísticos (sólo los más comunes), pero si no ponemos nada los saca todos y el argumento transpose = TRUE sirve para trasnponer la tabla de resultados. NOTA: cuando hablemos de informes reproducibles y de Rmarkdown veremos que estas tablas quedarán mucho mejor cuando mostremos nuestros resultados con HTML o incluso PDFs o documentos Word … pero eso será al final del curso. Podríamos pensar que este tipo de descriptivas también las obtenemos con SPSS o Stata, pero …. tenemos más opciones que nos facilitan mucho la vida como estadísticos. En este caso, podemos resumir toda nuestra base de datos (tanto variables continuas como categóricas) con la función dfSummary() y obtendríamos este output dfSummary(multicentric) Data Frame Summary multicentric Dimensions: 2910 x 25 Duplicates: 0 No Variable Stats / Values Freqs (% of Valid) Graph Valid Missing 1 ident [integer] Mean (sd) : 11550.2 (993.3) min 2910 distinct values 2910 (100%) 0 (0%) 2 pais [character] 1. Brasil 2. Colombia 3. Espaia 4. Filipinas 5. Marruecos 6. Peri 7. Tailandia 347(11.9%)323(11.1%)376(12.9%)636(21.9%)332(11.4%)312(10.7%)584(20.1%) 2910 (100%) 0 (0%) 3 status [character] 1. Caso 2. Control 1489(51.2%)1421(48.8%) 2910 (100%) 0 (0%) 4 edad [integer] Mean (sd) : 48.9 (11.9) min 62 distinct values 2910 (100%) 0 (0%) 5 niveledu [character] 1. ninguno 2. primaria 3. secundaria 4. ticnico 5. universitario 681(23.4%)1446(49.7%)673(23.1%)62(2.1%)48(1.6%) 2910 (100%) 0 (0%) 6 fumar [character] 1. ex-fumador 2. fumador 3. no fumador 223(7.7%)292(10.0%)2395(82.3%) 2910 (100%) 0 (0%) 7 edad1sex [integer] Mean (sd) : 19.7 (4.7) min 40 distinct values 2889 (99.28%) 21 (0.72%) 8 regcompa [integer] Mean (sd) : 1.3 (0.7) min 1:2147(74.4%)2:553(19.2%)3:142(4.9%)4:32(1.1%)5:8(0.3%)6:4(0.1%) 2886 (99.18%) 24 (0.82%) 9 totcompa [character] 1. >=100 2. 1 3. 11-20 4. 2-3 5. 21-50 6. 4-10 7. 51-99 7(0.2%)1947(68.5%)9(0.3%)749(26.4%)7(0.2%)122(4.3%)1(0.0%) 2842 (97.66%) 68 (2.34%) 10 ets [character] 1. no 2. si 1763(64.6%)964(35.4%) 2727 (93.71%) 183 (6.29%) 11 co [character] 1. no 2. si 1977(67.9%)933(32.1%) 2910 (100%) 0 (0%) 12 edinico [integer] Mean (sd) : 26.8 (6.6) min 37 distinct values 931 (31.99%) 1979 (68.01%) 13 edfinco [integer] Mean (sd) : 33.7 (7.8) min 45 distinct values 923 (31.72%) 1987 (68.28%) 14 durco [integer] Mean (sd) : 6.4 (6.2) min 33 distinct values 923 (31.72%) 1987 (68.28%) 15 condon [character] 1. no 2. si 2540(87.3%)370(12.7%) 2910 (100%) 0 (0%) 16 embara [character] 1. no 2. si 109(3.8%)2801(96.2%) 2910 (100%) 0 (0%) 17 edademba [integer] Mean (sd) : 21.3 (4.8) min 34 distinct values 2795 (96.05%) 115 (3.95%) 18 nembara [integer] Mean (sd) : 5.6 (3.2) min 21 distinct values 2795 (96.05%) 115 (3.95%) 19 pap [character] 1. no 2. si 1291(45.1%)1575(54.9%) 2866 (98.49%) 44 (1.51%) 20 edad1pap [integer] Mean (sd) : 39.9 (13.7) min 65 distinct values 1519 (52.2%) 1391 (47.8%) 21 vph [character] 1. negativo 2. positivo 1077(44.2%)1358(55.8%) 2435 (83.68%) 475 (16.32%) 22 edad1sex2 [numeric] Mean (sd) : 1.7 (4.7) min 40 distinct values 2889 (99.28%) 21 (0.72%) 23 edad1sex3 [numeric] Min : 0 Mean : 0.5 Max : 1 0:1379(47.7%)1:1510(52.3%) 2889 (99.28%) 21 (0.72%) 24 edad1sex4 [factor] 1. (5,16] 2. (16,19] 3. (19,22] 4. (22,52] 736(25.5%)872(30.2%)596(20.6%)684(23.7%) 2888 (99.24%) 22 (0.76%) 25 edad1sex5 [factor] 1. 257(8.9%)1122(38.8%)1510(52.3%) 2889 (99.28%) 21 (0.72%) Generated by summarytools 0.9.6 (R version 4.0.2)2020-09-28 "]
]
